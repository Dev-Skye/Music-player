// import {StyleSheet, Text, View, StatusBar, ScrollView, Image} from "react-native";
// import React, {useState, useEffect} from "react";
// import BottomNav from "./components/BottomNav"
// import * as MediaLibrary from "expo-media-library";
// import {useSelector, useDispatch} from "react-redux";
// import { setAllSongs } from "./redux/actions";
// import { backgroundColor1, backgroundColor2, primaryColor, themecol } from "./components/styles/Theme1";
// //import musicimg from "../../assets/images/musicimg.png";
// import { AntDesign } from '@expo/vector-icons';
// import { MaterialIcons } from '@expo/vector-icons';
// import musicimg from "./images/musicimg.png"


// const AllMusic = ({navigation}) => {

//    // const [allsongs, setAllSongs] = useState("Permission Not Granted");

//     const mysongs = useSelector(state => state.allsongs);

//   const permissionPopUp = async () => {
//     Alert.alert("Permission Required", "This app requires permission to access media library", [
//       {text: "Accept", onPress:() => MediaLibrary.requestPermissionsAsync()},
//       {text: "Cancel", onPress:() => permissionPopUp()}
//     ])
//   }
//   const getPermission = async () => {
//     const permission = await MediaLibrary.getPermissionsAsync();
//     //console.log(permission);
  
//     if(permission.granted == true){
//       console.log("Permission Granted, showing all music");
//       getAllSongs();
//     }

//     if(permission.granted == false && permission.canAskAgain == true){
//       const askpermission = await MediaLibrary.requestPermissionsAsync();
//      //console.log(askpermission)
     
//      if(askpermission.status == "denied" && askpermission.canAskAgain == true){
//       permissionPopUp();
//       getAllSongs();
//       console.log("Permission denied, please allow permission to show all music")
//      }

//      if(askpermission.status == "granted"){
//       console.log("Permission Granted, showing all music")
//      }
     
//      if(askpermission.status == "denied" && askpermission.canAskAgain == false){
//         console.log("Can't show music, please allow permission to show all music")
//      }
//     }
//   }
  
//   useEffect(() => {
//     getPermission()
//   },[])

//   const [activesong, setActivesong] = useState("");
//   const activesong_global = useSelector(state => state.activesong_global);
  
//   const dispatch = useDispatch()

//   const getAllSongs = async () => {
//     const songs = await MediaLibrary.getAssetsAsync({
//       mediaType: "audio",
//     })
    
//     dispatch(setAllSongs(songs))
//     //setAllSongs(songs.assets);
//   }
  
//   // console.log(mysongs.assets);
//   let activesonguri = "null";
//    if(mysongs?.assets){
//     activesonguri = mysongs?.assets[0]?.uri;
//     //console.log(activesonguri);
// }


   
//     useEffect(() => {
//         setActivesong(activesong_global);
//     }, [])


//     const updatecurrentsong = (item) => {
//         setActivesong(item);
//         dispatch(setActiveSong_global(item));
//         //console.log(activesong_global);

//     }

//     return(
//         <View style={styles.container}>
//             <StatusBar/>
//             <View style={styles.bottomnav}>
//                 {activesong?.filename && <View style={styles.bottomsong}>
//                         <Image source={musicimg} style={styles.songImage}/>
//                         <Text style={styles.songtitleb}>{activesong.filename}</Text>
//                                 <MaterialIcons name="pause-circle-filled" size={40} style={styles.iconactive} 
//                                 onPress={
//                                     ()=> playpausesong()
//                                 }
                                
//                             />
//                     <MaterialIcons name="playlist-add" size={40} color="black" style={styles.iconactive}/>
                    
//                     </View>}
//            <BottomNav activepage={"allmusic"} navigation={navigation}/>
//                 </View>
//             <Text style={styles.head1}>Your Songs
//             </Text>
//             <ScrollView style={styles.cont2}>
//                 {
//                     mysongs?.assets && mysongs.assets.map((item) => 
                        
//                            <View key={item.id}>
//                                 {
//                                     item.uri == activesong.uri ? 
//                             <View style={styles.songcardactive}>
//                             <Image source={musicimg} style={styles.songImage}/>
//                             <Text style={styles.songtitleb}>{item.filename}</Text>
//                             <MaterialIcons name="pause-circle-filled" size={35} color="black" style={styles.iconactive}/>
//                             <MaterialIcons name="playlist-add" size={24} color="black" style={styles.iconactive} />
//                            </View>
                           
//                            :

//                            <View style={styles.songcard}>
//                             <Image source={musicimg} style={styles.songImage}/>
//                             <Text style={styles.songtitle}>{item.filename}</Text>
//                             <AntDesign name="play" size={24} color="black" style={styles.icon}
//                                 onPress={() => updatecurrentsong(item)}
//                             />
//                             <MaterialIcons name="playlist-add" size={24} color="black" style={styles.icon} />
//                            </View>
//                                 }
//                            </View> 
                
//                     )
//                 }
//             </ScrollView>
//            </View>
//     )
//             }
            

// const styles = StyleSheet.create({
//     container: {
//         flex: 1,
//         backgroundColor: '#fff',
//         alignItems: 'center',
//         //justifyContent: 'center',
//         backgroundColor: backgroundColor1,
//         width: "100%"
//       },
//       iconactive:{
//         marginHorizontal: 10,
//         color: backgroundColor1
//       },
//       bottomsong:{
//         backgroundColor: primaryColor,
//         width: "100%",
//         flexDirection: "row",
//         alignItems: "center",
//         justifyContent: "space-between",
//         paddingHorizontal: 10,
//       },
//       songcardactive:{
//         width: "95%",
//         backgroundColor: primaryColor,
//         flexDirection: "row",
//         alignItems: "center",
//         padding: 10,
//         marginVertical: 5,
//         borderRadius: 10,
//         alignSelf: "center",
//         justifyContent: "space-between"
//       },

//       cont2:{
//         width: "100%"
//       },
//       songcard:{
//         flexDirection: "row",
//         backgroundColor: themecol,
//         alignItems: "center",
//         padding: 10,
//         marginVertical: 5,
//         justifyContent: "space-between",
//         width: "95%",
//         borderRadius: 10,
//         alignSelf: "center"
//       },
//       songtitle:{
//         color: "white",
//         fontSize: 16,
//         margin:10,
//         fontFamily: "Poppins-Regular",
//         width: "62%", 
//       },
//       songtitleb:{
//         color: themecol,
//         fontSize: 15.5,
//         margin:10,
//         fontFamily: "Poppins-SemiBold",
//         width: "60%", 
//     },
//       songImage:{
//         width: 40,
//         height: 40,
//         borderRadius: 50,
//         backgroundColor: backgroundColor1,
//       },
//       bottomnav:{
//         position:"absolute",
//         bottom: 0,
//         width: "100%",
//         alignItems: "center",
//         zIndex: 10
//       },
//       head1:{
//         color: primaryColor,
//         fontSize: 18,
//         backgroundColor: themecol,
//         paddingHorizontal: 20,
//         paddingVertical: 8,
//         marginTop: 20,
//         marginBottom: 10,
//         fontFamily: "Poppins-SemiBold",
//         borderRadius: 20,
//         width: "50%",
//         textAlign: "center",
//         alignItems: "center",
//       },
//       icon:{
//         marginHorizontal: 10,
//         color: primaryColor
//       },
//       songtitle1:{
//         color: primaryColor,

//       }
// });
// export default AllMusic;